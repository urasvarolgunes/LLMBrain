{"ast":null,"code":"var _jsxFileName = \"/Users/urasvarolgunes/Desktop/react-probability/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\nimport IntroModal from \"./IntroModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [windowTextId, setWindowTextId] = useState(0);\n  const [prevTokens, setPrevTokens] = useState([\" The\", \" winners\", \" of\", \" this\", \" year's\"]);\n  const [candidates, setCandidates] = useState({\n    tokens: [],\n    values: []\n  });\n\n  // useEffect is called when prevTokens changes, and also at the first render.\n  useEffect(() => {\n    console.log(\"after new word:\" + prevTokens);\n    console.log(\"probs\", candidates.values);\n    fetch(\"http://0.0.0.0:8002\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        text: prevTokens.join(\"\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(response => setCandidates(prev => {\n      return response;\n    })).catch(error => console.error(error));\n  }, [prevTokens]);\n  const pickWord = ({\n    target\n  }) => {\n    const newToken = target.innerHTML;\n    setPrevTokens(prev => {\n      return [...prev, newToken];\n    });\n  };\n  const deleteLast = () => {\n    setPrevTokens(prev => {\n      return prev.slice(0, -1);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" LLM Brain \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"light\",\n          onClick: deleteLast,\n          children: [\" \", \"Delete Last Word\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntroModal, {\n          showArrows: windowTextId,\n          setShowArrows: setWindowTextId,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100vw\",\n          height: \"5vh\",\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [prevTokens.map((token, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginRight: \"2vw\"\n            },\n            children: [\" \", index + 1, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            style: {\n              marginRight: \"1vw\"\n            },\n            children: [\" \", token, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"50vh\",\n            flexDirection: \"column\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginRight: \"1vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Next Word \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), candidates.tokens.map(token => /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            onClick: pickWord,\n            children: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"50vh\",\n            flexDirection: \"column\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Probability \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), candidates.values.map(value => /*#__PURE__*/_jsxDEV(Button, {\n            color: \"info\",\n            children: (Math.round(value * 10000) / 100).toString() + \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4GyHCsBUO9XIK+coVFemW2EAqms=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Button","useEffect","useState","IntroModal","jsxDEV","_jsxDEV","App","_s","windowTextId","setWindowTextId","prevTokens","setPrevTokens","candidates","setCandidates","tokens","values","console","log","fetch","method","body","JSON","stringify","text","join","headers","then","response","json","prev","catch","error","pickWord","target","newToken","innerHTML","deleteLast","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","display","flexDirection","color","onClick","showArrows","setShowArrows","width","height","map","token","index","marginRight","justifyContent","value","Math","round","toString","_c","$RefreshReg$"],"sources":["/Users/urasvarolgunes/Desktop/react-probability/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\nimport IntroModal from \"./IntroModal\";\n\nfunction App() {\n  const [windowTextId, setWindowTextId] = useState(0);\n\n  const [prevTokens, setPrevTokens] = useState([\n    \" The\",\n    \" winners\",\n    \" of\",\n    \" this\",\n    \" year's\",\n  ]);\n  const [candidates, setCandidates] = useState({ tokens: [], values: [] });\n\n  // useEffect is called when prevTokens changes, and also at the first render.\n  useEffect(() => {\n    console.log(\"after new word:\" + prevTokens);\n    console.log(\"probs\", candidates.values);\n    fetch(\"http://0.0.0.0:8002\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        text: prevTokens.join(\"\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) =>\n        setCandidates((prev) => {\n          return response;\n        })\n      )\n      .catch((error) => console.error(error));\n  }, [prevTokens]);\n\n  const pickWord = ({ target }) => {\n    const newToken = target.innerHTML;\n    setPrevTokens((prev) => {\n      return [...prev, newToken];\n    });\n  };\n\n  const deleteLast = () => {\n    setPrevTokens((prev) => {\n      return prev.slice(0, -1);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1> LLM Brain </h1>\n\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <Button color=\"light\" onClick={deleteLast}>\n            {\" \"}\n            Delete Last Word\n          </Button>\n          <IntroModal showArrows={windowTextId} setShowArrows={setWindowTextId}>\n            {\" \"}\n          </IntroModal>\n        </div>\n\n        <div\n          style={{\n            width: \"100vw\",\n            height: \"5vh\",\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          {prevTokens.map((token, index) => (\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <p style={{ marginRight: \"2vw\" }}> {index + 1} </p>\n              <Button color=\"danger\" style={{ marginRight: \"1vw\" }}>\n                {\" \"}\n                {token}{\" \"}\n              </Button>\n            </div>\n          ))}\n          <div\n            style={{\n              height: \"50vh\",\n              flexDirection: \"column\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginRight: \"1vh\",\n            }}\n          >\n            <p> Next Word </p>\n            {candidates.tokens.map((token) => (\n              <Button color=\"success\" onClick={pickWord}>\n                {token}\n              </Button>\n            ))}\n          </div>\n\n          <div\n            style={{\n              height: \"50vh\",\n              flexDirection: \"column\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <p> Probability </p>\n            {candidates.values.map((value) => (\n              <Button color=\"info\">\n                {(Math.round(value * 10000) / 100).toString() + \"%\"}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}